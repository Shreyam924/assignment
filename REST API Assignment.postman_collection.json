{
	"info": {
		"_postman_id": "55b465e2-16b8-4a5d-9007-75b810e31b30",
		"name": "REST API Assignment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30435913"
	},
	"item": [
		{
			"name": "Listing all the repositories",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is correct\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/users/repos",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"users",
						"repos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Listing specific user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is correct\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate repository details\", function () {\r",
							"    responseData.forEach(repo => {\r",
							"        pm.expect(repo.name).to.not.be.empty;\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/users/Shreyam924/repos",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"users",
						"Shreyam924",
						"repos"
					]
				}
			},
			"response": []
		},
		{
			"name": "List all public repositories",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "GET https://api.github.com/repositories",
					"protocol": "GET https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repositories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new repository",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 201 (Created)\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate repository details\", function () {\r",
							"    pm.expect(responseData.name).to.eql(\"my repo\"); \r",
							"    pm.expect(responseData.private).to.eql(false); \r",
							"    pm.expect(responseData.auto_init).to.eql(true); \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"my repo\",\r\n    \"description\": \"This is a new repository created using Postman\",\r\n    \"private\": false, \r\n    \"auto_init\": true \r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.github.com/user/repos",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"user",
						"repos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new repository with same name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 201 (Created)\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate repository details\", function () {\r",
							"    pm.expect(responseData.name).to.eql(\"my repo\"); \r",
							"    pm.expect(responseData.private).to.eql(false); \r",
							"    pm.expect(responseData.auto_init).to.eql(true); \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"my repo\",\r\n    \"description\": \"This is a new repository created using Postman\",\r\n    \"private\": false, \r\n    \"auto_init\": true \r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.github.com/user/repos",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"user",
						"repos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get repo details",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/repos/Shreyam924/assignment",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"Shreyam924",
						"assignment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit repo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200 (OK)\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"rest api assignment\",\r\n    \"description\": \"Updated description\"\r\n}\r\n"
				},
				"url": {
					"raw": "https://api.github.com/repos/Shreyam924/api-assignment",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"Shreyam924",
						"api-assignment"
					]
				}
			},
			"response": []
		},
		{
			"name": "List contributors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 (OK)\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/repos/Shreyam924/rest-api-assignment/contributors",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"Shreyam924",
						"rest-api-assignment",
						"contributors"
					]
				}
			},
			"response": []
		},
		{
			"name": "List languages",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Validate that the response is a JSON object\r",
							"pm.test(\"Response is a JSON object\", function () {\r",
							"    pm.expect(pm.response.json()).to.be.an('object');\r",
							"});\r",
							"\r",
							"// Validate keys for programming languages\r",
							"pm.test(\"Validate programming languages keys\", function () {\r",
							"    const languages = pm.response.json();\r",
							"    Object.keys(languages).forEach(language => {\r",
							"        pm.expect(language).to.be.a('string');\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/repos/Shreyam924/my-repo/languages",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"Shreyam924",
						"my-repo",
						"languages"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete repo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Validate the status code (should be 204 - No Content)\r",
							"pm.test(\"Status code is 204 (No Content)\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"// Validate that the response body is empty\r",
							"pm.test(\"Response body is empty\", function () {\r",
							"    pm.expect(pm.response.text()).to.eql('');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.github.com/repos/Shreyam924/new-repo",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"Shreyam924",
						"new-repo"
					]
				}
			},
			"response": []
		}
	]
}